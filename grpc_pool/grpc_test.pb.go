// Code generated by protoc-gen-go. DO NOT EDIT.
// source: grpc_test.proto

/*
Package grpc_pool is a generated protocol buffer package.

It is generated from these files:
	grpc_test.proto

It has these top-level messages:
	HelloWorldModel
	CommonResp
*/
package grpc_pool

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// 返回的状态值
type ReturnStatus int32

const (
	ReturnStatus_StatusFail            ReturnStatus = 0
	ReturnStatus_StatusSuccess         ReturnStatus = 1
	ReturnStatus_StatusArgumentInvalid ReturnStatus = 2
	ReturnStatus_StatusAuthVerifyFail  ReturnStatus = 3
)

var ReturnStatus_name = map[int32]string{
	0: "StatusFail",
	1: "StatusSuccess",
	2: "StatusArgumentInvalid",
	3: "StatusAuthVerifyFail",
}
var ReturnStatus_value = map[string]int32{
	"StatusFail":            0,
	"StatusSuccess":         1,
	"StatusArgumentInvalid": 2,
	"StatusAuthVerifyFail":  3,
}

func (x ReturnStatus) String() string {
	return proto.EnumName(ReturnStatus_name, int32(x))
}
func (ReturnStatus) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type HelloWorldModel struct {
	Title string `protobuf:"bytes,1,opt,name=title" json:"title,omitempty"`
}

func (m *HelloWorldModel) Reset()                    { *m = HelloWorldModel{} }
func (m *HelloWorldModel) String() string            { return proto.CompactTextString(m) }
func (*HelloWorldModel) ProtoMessage()               {}
func (*HelloWorldModel) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *HelloWorldModel) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

type CommonResp struct {
	Status ReturnStatus `protobuf:"varint,1,opt,name=status,enum=grpc_pool.ReturnStatus" json:"status,omitempty"`
	Desc   string       `protobuf:"bytes,2,opt,name=desc" json:"desc,omitempty"`
}

func (m *CommonResp) Reset()                    { *m = CommonResp{} }
func (m *CommonResp) String() string            { return proto.CompactTextString(m) }
func (*CommonResp) ProtoMessage()               {}
func (*CommonResp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *CommonResp) GetStatus() ReturnStatus {
	if m != nil {
		return m.Status
	}
	return ReturnStatus_StatusFail
}

func (m *CommonResp) GetDesc() string {
	if m != nil {
		return m.Desc
	}
	return ""
}

func init() {
	proto.RegisterType((*HelloWorldModel)(nil), "grpc_pool.HelloWorldModel")
	proto.RegisterType((*CommonResp)(nil), "grpc_pool.CommonResp")
	proto.RegisterEnum("grpc_pool.ReturnStatus", ReturnStatus_name, ReturnStatus_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for GrpcTest service

type GrpcTestClient interface {
	HelloWorld(ctx context.Context, in *HelloWorldModel, opts ...grpc.CallOption) (*CommonResp, error)
}

type grpcTestClient struct {
	cc *grpc.ClientConn
}

func NewGrpcTestClient(cc *grpc.ClientConn) GrpcTestClient {
	return &grpcTestClient{cc}
}

func (c *grpcTestClient) HelloWorld(ctx context.Context, in *HelloWorldModel, opts ...grpc.CallOption) (*CommonResp, error) {
	out := new(CommonResp)
	err := grpc.Invoke(ctx, "/grpc_pool.grpc_test/HelloWorld", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for GrpcTest service

type GrpcTestServer interface {
	HelloWorld(context.Context, *HelloWorldModel) (*CommonResp, error)
}

func RegisterGrpcTestServer(s *grpc.Server, srv GrpcTestServer) {
	s.RegisterService(&_GrpcTest_serviceDesc, srv)
}

func _GrpcTest_HelloWorld_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(HelloWorldModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GrpcTestServer).HelloWorld(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc_pool.grpc_test/HelloWorld",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GrpcTestServer).HelloWorld(ctx, req.(*HelloWorldModel))
	}
	return interceptor(ctx, in, info, handler)
}

var _GrpcTest_serviceDesc = grpc.ServiceDesc{
	ServiceName: "grpc_pool.grpc_test",
	HandlerType: (*GrpcTestServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "HelloWorld",
			Handler:    _GrpcTest_HelloWorld_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "grpc_test.proto",
}

func init() { proto.RegisterFile("grpc_test.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 241 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x5c, 0x50, 0x4d, 0x4b, 0xc3, 0x40,
	0x10, 0x35, 0x55, 0x0b, 0x19, 0xb4, 0x8d, 0x43, 0x8b, 0xb1, 0x27, 0xe9, 0x45, 0xf1, 0x10, 0xa1,
	0xfe, 0x00, 0x11, 0x41, 0x14, 0xf4, 0x60, 0x0a, 0x7a, 0x94, 0x98, 0x4c, 0x6b, 0x60, 0x92, 0x09,
	0xbb, 0xb3, 0x82, 0xff, 0x5e, 0xd8, 0x2d, 0x6d, 0xe8, 0x6d, 0xde, 0x07, 0x8f, 0x79, 0x0f, 0xc6,
	0x6b, 0xd3, 0x95, 0x5f, 0x4a, 0x56, 0xb3, 0xce, 0x88, 0x0a, 0xc6, 0x9e, 0xe8, 0x44, 0x78, 0x7e,
	0x05, 0xe3, 0x67, 0x62, 0x96, 0x4f, 0x31, 0x5c, 0xbd, 0x49, 0x45, 0x8c, 0x13, 0x38, 0xd6, 0x5a,
	0x99, 0xd2, 0xe8, 0x32, 0xba, 0x8e, 0xf3, 0x00, 0xe6, 0xef, 0x00, 0x8f, 0xd2, 0x34, 0xd2, 0xe6,
	0x64, 0x3b, 0xbc, 0x85, 0xa1, 0xd5, 0x42, 0x9d, 0xf5, 0xa6, 0xd1, 0xe2, 0x3c, 0xdb, 0x46, 0x66,
	0x39, 0xa9, 0x33, 0xed, 0xd2, 0xcb, 0xf9, 0xc6, 0x86, 0x08, 0x47, 0x15, 0xd9, 0x32, 0x1d, 0xf8,
	0x4c, 0x7f, 0xdf, 0xac, 0xe0, 0xa4, 0xef, 0xc5, 0x11, 0x40, 0xb8, 0x9e, 0x8a, 0x9a, 0x93, 0x03,
	0x3c, 0x83, 0xd3, 0x80, 0x97, 0xae, 0x2c, 0xc9, 0xda, 0x24, 0xc2, 0x0b, 0x98, 0x06, 0xea, 0xc1,
	0xac, 0x5d, 0x43, 0xad, 0xbe, 0xb4, 0xbf, 0x05, 0xd7, 0x55, 0x32, 0xc0, 0x14, 0x26, 0x1b, 0xc9,
	0xe9, 0xcf, 0x07, 0x99, 0x7a, 0xf5, 0xe7, 0x73, 0x0e, 0x17, 0xaf, 0x10, 0x6f, 0x17, 0xc0, 0x7b,
	0x80, 0x5d, 0x61, 0x9c, 0xf5, 0xfe, 0xde, 0xdb, 0x61, 0x36, 0xed, 0x69, 0xbb, 0xea, 0xdf, 0x43,
	0xbf, 0xe1, 0xdd, 0x7f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x94, 0xbb, 0x0c, 0x1c, 0x56, 0x01, 0x00,
	0x00,
}
